{"version":3,"sources":["constants/staffConstants.js","constants/clinicConstants.js","store.js","reducers/staffReducers.js","reducers/clinicReducers.js","actions/staffActions.js","components/Loader.js","screens/ShowStaffsScreen.js","components/FormContainer.js","screens/StaffLoginScreen.js","screens/HomepageScreen.js","screens/CreateStaffScreen.js","screens/CreateRecordScreen.js","actions/clinicActions.js","components/RecordTable.js","screens/SearchRecordScreen.js","screens/CustomerDetailScreen.js","screens/AnimalDetailScreen.js","components/Header.js","App.js","index.js"],"names":["STAFF_LOGIN_REQUEST","STAFF_LOGIN_SUCCESS","STAFF_LOGIN_FAIL","STAFF_DELETE_REQUEST","STAFF_DELETE_SUCCESS","STAFF_DELETE_FAIL","STAFF_LOGOUT","STAFF_SHOW_REQUEST","STAFF_SHOW_SUCCESS","STAFF_SHOW_FAIL","CREATE_STAFF_REQUEST","CREATE_STAFF_SUCCESS","CREATE_STAFF_FAIL","GET_CUSTOMERS_REQUEST","GET_CUSTOMERS_SUCCESS","GET_CUSTOMERS_FAIL","GET_CUSTOMER_REQUEST","GET_CUSTOMER_SUCCESS","GET_CUSTOMER_FAIL","GET_ANIMAL_REQUEST","GET_ANIMAL_SUCCESS","GET_ANIMAL_FAIL","EDIT_CUSTOMER_REQUEST","EDIT_CUSTOMER_SUCCESS","EDIT_CUSTOMER_FAIL","EDIT_ANIMAL_REQUEST","EDIT_ANIMAL_SUCCESS","EDIT_ANIMAL_FAIL","CREATE_RECORD_REQUEST","CREATE_RECORD_SUCCESS","CREATE_RECORD_FAIL","SEARCH_RECORD_REQUEST","SEARCH_RECORD_SUCCESS","SEARCH_RECORD_FAIL","SEARCH_RECORD_RESET","GET_RECORD_REQUEST","GET_RECORD_SUCCESS","GET_RECORD_FAIL","reducer","combineReducers","staffLogin","state","action","type","loading","staffInfo","payload","error","showStaffs","staffs","createStaff","data","deleteStaff","getCustomers","customersData","createRecord","recordLoading","recordMessage","recordError","getRecords","recordsData","getRecord","recordData","getCustomer","customerData","getAnimal","animalData","editCustomer","editLoading","editMessage","editAnimal","initialState","localStorage","getItem","JSON","parse","middleWare","thunk","store","createStore","applyMiddleware","logout","dispatch","removeItem","Loader","className","style","height","Spinner","animation","ShowStaffsScreen","useDispatch","all_staffs","useSelector","useEffect","window","scrollTo","getState","a","config","headers","Authorization","token","console","log","axios","get","response","detail","message","e","pk","delete","location","reload","scope","map","staff","index","full_name","email","Date","date_joined","toLocaleDateString","last_login","isAdmin","onClick","id","FormContainer","children","Container","Row","Col","xs","md","StaffLoginScreen","history","useState","setEmail","password","setPassword","redirect","search","split","push","Form","onSubmit","preventDefault","post","setItem","stringify","login","Group","controlId","Label","Control","required","placeholder","value","onChange","target","Button","variant","HomepageScreen","useHistory","CreateStaffScreen","first_name","set_first_name","last_name","set_last_name","confirmPassword","setConfirmPassword","passwordMessage","setPasswordMessage","createStaffAction","CreateRecordScreen","customer_firstName","setCustomer_fistName","customer_lastName","setCustomer_lastName","customer_email","setCustomer_email","customer_contactInformation","setCustomer_contactInformation","customer_phoneNumber","setCustomer_phoneNumber","animal_name","setAnimal_name","animal_species","setAnimal_species","animal_genus","setAnimal_genus","animal_age","setAnimal_age","animal_comment","setAnimal_comment","customerSelected","setCustomerSelected","customers","record","customer","find_customer","find","element","contactInformation","phoneNumber","customerFormHandler","createRecordAction","selected","options","customersName_list","i","length","customer_fullName","customersName","RecordTable","setMessage","deleteCustomer","deleteCustomerAction","deleteAnimal","deleteAnimalAction","to","colSpan","name","species","genus","age","comment","SearchRecordScreen","animalsAndCustomers","setAnimalsAndCustomers","typeOfRecord","setTypeOfRecord","records","selectedRecordHandler","selectedRecord","splitedRecord","allRecors","searchList","customer_name","filter","item","indexOf","searchBarList","undefined","formHandler","CustomerDetailScreen","edit","pathname","getCustomerAction","put","editCustomerAction","AnimalDetailScreen","animal","getAnimalAction","editAnimalAction","Header","logoutHandler","Navbar","bg","expand","collapseOnSelect","Brand","Toggle","Collapse","Nav","Fragment","Link","bsPrefix","NavDropdown","title","Item","App","decodedToken","jwt","decode","complete","dateNow","exp","getTime","path","component","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a834080a.chunk.js","sourcesContent":["export const STAFF_LOGIN_REQUEST = \"STAFF_LOGIN_REQUEST\";\nexport const STAFF_LOGIN_SUCCESS = \"STAFF_LOGIN_SUCCESS\";\nexport const STAFF_LOGIN_FAIL = \"STAFF_LOGIN_FAIL\";\n\nexport const STAFF_DELETE_REQUEST = \"STAFF_DELETE_REQUEST\";\nexport const STAFF_DELETE_SUCCESS = \"STAFF_DELETE_SUCCESS\";\nexport const STAFF_DELETE_FAIL = \"STAFF_DELETE_FAIL\";\n\nexport const STAFF_LOGOUT = \"STAFF_LOGOUT\";\n\nexport const STAFF_SHOW_REQUEST = \"STAFF_SHOW_REQUEST\";\nexport const STAFF_SHOW_SUCCESS = \"STAFF_SHOW_SUCCESS\";\nexport const STAFF_SHOW_FAIL = \"STAFF_SHOW_FAIL\";\n\nexport const CREATE_STAFF_REQUEST = \"CREATE_STAFF_REQUEST\";\nexport const CREATE_STAFF_SUCCESS = \"CREATE_STAFF_SUCCESS\";\nexport const CREATE_STAFF_FAIL = \"CREATE_STAFF_FAIL\";","export const GET_CUSTOMERS_REQUEST = \"GET_CUSTOMERS_REQUEST\";\nexport const GET_CUSTOMERS_SUCCESS = \"GET_CUSTOMERS_SUCCESS\";\nexport const GET_CUSTOMERS_FAIL = \"GET_CUSTOMERS_FAIL\";\n\nexport const GET_CUSTOMER_REQUEST = \"GET_CUSTOMER_REQUEST\";\nexport const GET_CUSTOMER_SUCCESS = \"GET_CUSTOMER_SUCCESS\";\nexport const GET_CUSTOMER_FAIL = \"GET_CUSTOMER_FAIL\";\n\nexport const GET_ANIMAL_REQUEST = \"GET_ANIMAL_REQUEST\";\nexport const GET_ANIMAL_SUCCESS = \"GET_ANIMAL_SUCCESS\";\nexport const GET_ANIMAL_FAIL = \"GET_ANIMAL_FAIL\";\n\nexport const EDIT_CUSTOMER_REQUEST = \"EDIT_CUSTOMER_REQUEST\";\nexport const EDIT_CUSTOMER_SUCCESS = \"EDIT_CUSTOMER_SUCCESS\";\nexport const EDIT_CUSTOMER_FAIL = \"EDIT_CUSTOMER_FAIL\";\n\nexport const EDIT_ANIMAL_REQUEST = \"EDIT_ANIMAL_REQUEST\";\nexport const EDIT_ANIMAL_SUCCESS = \"EDIT_ANIMAL_SUCCESS\";\nexport const EDIT_ANIMAL_FAIL = \"EDIT_ANIMAL_FAIL\";\n\nexport const CREATE_RECORD_REQUEST = \"CREATE_RECORD_REQUEST\";\nexport const CREATE_RECORD_SUCCESS = \"CREATE_RECORD_SUCCESS\";\nexport const CREATE_RECORD_FAIL = \"CREATE_RECORD_FAIL\";\n\nexport const SEARCH_RECORD_REQUEST = \"SEARCH_RECORD_REQUEST\";\nexport const SEARCH_RECORD_SUCCESS = \"SEARCH_RECORD_SUCCESS\";\nexport const SEARCH_RECORD_FAIL = \"SEARCH_RECORD_FAIL\";\nexport const SEARCH_RECORD_RESET = \"SEARCH_RECORD_RESET\";\n\nexport const GET_RECORD_REQUEST = \"GET_RECORD_REQUEST\";\nexport const GET_RECORD_SUCCESS = \"GET_RECORD_SUCCESS\";\nexport const GET_RECORD_FAIL = \"GET_RECORD_FAIL\";\n\nexport const DELETE_CUSTOMER_REQUEST = \"DELETE_CUSTOMER_REQUEST\";\nexport const DELETE_CUSTOMER_SUCCESS = \"DELETE_CUSTOMER_SUCCESS\";\nexport const DELETE_CUSTOMER_FAIL = \"DELETE_CUSTOMER_FAIL\";\n\nexport const DELETE_ANIMAL_REQUEST = \"DELETE_ANIMAL_REQUEST\";\nexport const DELETE_ANIMAL_SUCCESS = \"DELETE_ANIMAL_SUCCESS\";\nexport const DELETE_ANIMAL_FAIL = \"DELETE_ANIMAL_FAIL\";","import {createStore, combineReducers, applyMiddleware} from \"redux\";\nimport {staffLoginReducer, showStaffsReducer, createStaffReducer, deleteStaffReducer} from \"./reducers/staffReducers\";\nimport {\n    getCustomersReducer,\n    createRecordReducer,\n    getRecordsReducer,\n    getRecordReducer,\n    getCustomerReducer,\n    getAnimalReducer,\n    editCustomerReducer,\n    editAnimalReducer,\n} from \"./reducers/clinicReducers\";\nimport thunk from \"redux-thunk\";\n\n\nconst reducer = combineReducers({\n    staffLogin: staffLoginReducer,\n    showStaffs: showStaffsReducer,\n    createStaff: createStaffReducer,\n    deleteStaff: deleteStaffReducer,\n    getCustomers: getCustomersReducer,\n    createRecord: createRecordReducer,\n    getRecords: getRecordsReducer,\n    getRecord: getRecordReducer,\n    getCustomer: getCustomerReducer,\n    getAnimal: getAnimalReducer,\n    editCustomer: editCustomerReducer,\n    editAnimal: editAnimalReducer,\n});\n\nconst staffInfoFromStorage = localStorage.getItem(\"staffInfo\") ?\n    JSON.parse(localStorage.getItem(\"staffInfo\")) : null;\n\nconst initialState = {\n    staffLogin: {staffInfo: staffInfoFromStorage},\n};\n\nconst middleWare = [thunk];\n\nconst store = createStore(reducer, initialState, applyMiddleware(...middleWare));\n\nexport default store;","import {\n    STAFF_LOGIN_REQUEST,\n    STAFF_LOGIN_SUCCESS,\n    STAFF_LOGIN_FAIL,\n    STAFF_DELETE_REQUEST,\n    STAFF_DELETE_SUCCESS,\n    STAFF_DELETE_FAIL,\n    STAFF_LOGOUT,\n    STAFF_SHOW_REQUEST,\n    STAFF_SHOW_SUCCESS,\n    STAFF_SHOW_FAIL,\n    CREATE_STAFF_REQUEST,\n    CREATE_STAFF_SUCCESS,\n    CREATE_STAFF_FAIL,\n} from \"../constants/staffConstants\";\n\nexport const showStaffsReducer = (state = {}, action) => {\n    switch (action.type) {\n        case STAFF_SHOW_REQUEST:\n            return {loading: true}\n        case STAFF_SHOW_SUCCESS:\n            return {loading: false, staffs: action.payload}\n        case STAFF_SHOW_FAIL:\n            return {loading: false, error: action.payload}\n        default:\n            return state\n    }\n}\n\n\nexport const staffLoginReducer = (state = {}, action) => {\n    switch (action.type) {\n        case STAFF_LOGIN_REQUEST:\n            return {loading: true}\n        case STAFF_LOGIN_SUCCESS:\n            return {loading: false, staffInfo: action.payload}\n        case STAFF_LOGIN_FAIL:\n            return {loading: false, error: action.payload}\n        case STAFF_LOGOUT:\n            return {}\n        default:\n            return state\n    }\n}\n\nexport const createStaffReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CREATE_STAFF_REQUEST:\n            return {loading: true}\n        case CREATE_STAFF_SUCCESS:\n            return {loading: false, data: action.payload}\n        case CREATE_STAFF_FAIL:\n            return {loading: false, error: action.payload}\n        default:\n            return state\n    }\n}\n\nexport const deleteStaffReducer = (state = {}, action) => {\n    switch (action.type) {\n        case STAFF_DELETE_REQUEST:\n            return {loading: true}\n        case STAFF_DELETE_SUCCESS:\n            return {loading: false, data: action.payload}\n        case STAFF_DELETE_FAIL:\n            return {}\n        default:\n            return state\n    }\n}","import {\n    GET_CUSTOMERS_REQUEST,\n    GET_CUSTOMERS_SUCCESS,\n    GET_CUSTOMERS_FAIL,\n    CREATE_RECORD_REQUEST,\n    CREATE_RECORD_SUCCESS,\n    CREATE_RECORD_FAIL,\n    SEARCH_RECORD_REQUEST,\n    SEARCH_RECORD_SUCCESS,\n    SEARCH_RECORD_FAIL,\n    SEARCH_RECORD_RESET,\n    GET_RECORD_REQUEST,\n    GET_RECORD_SUCCESS,\n    GET_RECORD_FAIL,\n    GET_CUSTOMER_REQUEST,\n    GET_CUSTOMER_SUCCESS,\n    GET_CUSTOMER_FAIL,\n    GET_ANIMAL_REQUEST,\n    GET_ANIMAL_SUCCESS,\n    GET_ANIMAL_FAIL,\n    EDIT_CUSTOMER_REQUEST,\n    EDIT_CUSTOMER_SUCCESS,\n    EDIT_CUSTOMER_FAIL,\n    EDIT_ANIMAL_REQUEST,\n    EDIT_ANIMAL_SUCCESS,\n    EDIT_ANIMAL_FAIL,\n    DELETE_CUSTOMER_REQUEST,\n    DELETE_CUSTOMER_SUCCESS,\n    DELETE_CUSTOMER_FAIL,\n    DELETE_ANIMAL_REQUEST,\n    DELETE_ANIMAL_SUCCESS,\n    DELETE_ANIMAL_FAIL,\n} from \"../constants/clinicConstants\";\n\n\nexport const getCustomersReducer = (state = {}, action) => {\n    switch (action.type) {\n        case GET_CUSTOMERS_REQUEST:\n            return {loading: true}\n        case GET_CUSTOMERS_SUCCESS:\n            return {loading: false, customersData: action.payload}\n        case GET_CUSTOMERS_FAIL:\n            return {loading: false, error: action.payload}\n        default:\n            return state\n    }\n}\n\nexport const getCustomerReducer = (state = {}, action) => {\n    switch (action.type) {\n        case GET_CUSTOMER_REQUEST:\n            return {loading: true}\n        case GET_CUSTOMER_SUCCESS:\n            return {loading: false, customerData: action.payload}\n        case GET_CUSTOMER_FAIL:\n            return {loading: false, error: action.payload}\n        default:\n            return state\n    }\n}\n\nexport const getAnimalReducer = (state = {}, action) => {\n    switch (action.type) {\n        case GET_ANIMAL_REQUEST:\n            return {loading: true}\n        case GET_ANIMAL_SUCCESS:\n            return {loading: false, animalData: action.payload}\n        case GET_ANIMAL_FAIL:\n            return {loading: false, error: action.payload}\n        default:\n            return state\n    }\n}\n\nexport const editCustomerReducer = (state = {}, action) => {\n    switch (action.type) {\n        case EDIT_CUSTOMER_REQUEST:\n            return {editLoading: true}\n        case EDIT_CUSTOMER_SUCCESS:\n            return {editLoading: false, editMessage: action.payload}\n        case EDIT_CUSTOMER_FAIL:\n            return {editLoading: false, error: action.payload}\n        default:\n            return state\n    }\n}\n\nexport const editAnimalReducer = (state = {}, action) => {\n    switch (action.type) {\n        case EDIT_ANIMAL_REQUEST:\n            return {editLoading: true}\n        case EDIT_ANIMAL_SUCCESS:\n            return {editLoading: false, editMessage: action.payload}\n        case EDIT_ANIMAL_FAIL:\n            return {editLoading: false, error: action.payload}\n        default:\n            return state\n    }\n}\n\nexport const createRecordReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CREATE_RECORD_REQUEST:\n            return {recordLoading: true}\n        case CREATE_RECORD_SUCCESS:\n            return {recordLoading: false, recordMessage: action.payload}\n        case CREATE_RECORD_FAIL:\n            return {recordLoading: false, recordError: action.payload}\n        default:\n            return state\n    }\n}\n\nexport const getRecordsReducer = (state = {}, action) => {\n    switch (action.type) {\n        case SEARCH_RECORD_REQUEST:\n            return {loading: true}\n        case SEARCH_RECORD_SUCCESS:\n            return {loading: false, recordsData: action.payload}\n        case SEARCH_RECORD_FAIL:\n            return {loading: false, error: action.payload}\n        case SEARCH_RECORD_RESET:\n            return {}\n        default:\n            return state\n    }\n}\n\nexport const getRecordReducer = (state = {}, action) => {\n    switch (action.type) {\n        case GET_RECORD_REQUEST:\n            return {recordLoading: true}\n        case GET_RECORD_SUCCESS:\n            return {recordLoading: false, recordData: action.payload}\n        case GET_RECORD_FAIL:\n            return {recordLoading: false, recordError: action.payload}\n        default:\n            return state\n    }\n}\n","import {\n    STAFF_LOGIN_REQUEST,\n    STAFF_LOGIN_SUCCESS,\n    STAFF_LOGIN_FAIL,\n    STAFF_DELETE_REQUEST,\n    STAFF_DELETE_SUCCESS,\n    STAFF_DELETE_FAIL,\n    STAFF_LOGOUT,\n    STAFF_SHOW_REQUEST,\n    STAFF_SHOW_SUCCESS,\n    STAFF_SHOW_FAIL,\n    CREATE_STAFF_REQUEST,\n    CREATE_STAFF_SUCCESS,\n    CREATE_STAFF_FAIL,\n} from \"../constants/staffConstants\";\nimport axios from \"axios\";\n\nexport const showStaffsAction = () => async (dispatch, getState) => {\n    try {\n\n        dispatch({\n            type: STAFF_SHOW_REQUEST,\n        })\n\n        const {\n            staffLogin: {staffInfo}\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-type\": \"application/json\",\n                Authorization: `Bearer ${staffInfo.token}`\n            }\n        }\n        console.log(\"actions\")\n        const {data} = await axios.get(\n            \"/api/staffs/\",\n            config\n        )\n\n        dispatch({\n            type: STAFF_SHOW_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: STAFF_SHOW_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message\n        })\n    }\n}\n\nexport const login = (email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: STAFF_LOGIN_REQUEST,\n        })\n\n        const config = {\n            headers: {\n                \"Content-type\": \"application/json\"\n            }\n        }\n\n        const {data} = await axios.post(\n            \"/api/staffs/login/\",\n            {\"username\": email, \"password\": password},\n            config\n        )\n\n        dispatch({\n            type: STAFF_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem(\"staffInfo\", JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: STAFF_LOGIN_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message\n        })\n    }\n}\n\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem(\"staffInfo\");\n    dispatch({\n        type: STAFF_LOGOUT,\n    })\n}\n\nexport const createStaffAction = (first_name, last_name, email, password) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: CREATE_STAFF_REQUEST,\n        })\n\n        const {\n            staffLogin: {staffInfo}\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-type\": \"application/json\",\n                Authorization: `Bearer ${staffInfo.token}`\n            }\n        }\n\n        const {data} = await axios.post(\n            \"/api/staffs/create/\",\n            {\"first_name\": first_name, \"last_name\": last_name, \"email\": email, \"password\": password},\n            config\n        )\n        dispatch({\n            type: CREATE_STAFF_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: CREATE_STAFF_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message\n        })\n    }\n}\n\nexport const deleteStaffAction = (pk) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: STAFF_DELETE_REQUEST,\n        })\n\n        const {\n            staffLogin: {staffInfo}\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-type\": \"application/json\",\n                Authorization: `Bearer ${staffInfo.token}`\n            }\n        }\n\n        const {data} = await axios.delete(\n            `/api/staffs/delete/${pk}`,\n            config\n        )\n        dispatch({\n            type: STAFF_DELETE_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: STAFF_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message\n        })\n    }\n}\n\n","import React from 'react';\nimport {Spinner} from \"react-bootstrap\";\nimport '../components_css/Loader.css';\n\nfunction Loader() {\n    return (\n        <div className={\"container\"}>\n            <div className={\"row\"} style={{height: \"80vh\"}}>\n                <div className={\"col d-flex align-items-center justify-content-center\"}>\n                    <Spinner animation=\"grow\"/>\n                </div>\n            </div>\n        </div>\n    );\n}\n\n\nexport default Loader;","import React, {useState, useEffect} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {showStaffsAction, deleteStaffAction} from \"../actions/staffActions\";\nimport Loader from \"../components/Loader\";\n\n\nfunction ShowStaffsScreen() {\n    const dispatch = useDispatch();\n\n    const all_staffs = useSelector(state => state.showStaffs);\n    const {error, loading, staffs} = all_staffs;\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n        dispatch(showStaffsAction());\n    }, [])\n\n    const deleteStaff = (e) => {\n        dispatch(deleteStaffAction(e));\n        window.location.reload();\n    }\n\n    return (\n        <div className={\"container mt-5\"}>\n            <div className={\"row text-center\"}>\n                {error && <h5 className={\"text-danger\"}>{error}</h5>}\n                {loading && <Loader/>}\n            </div>\n            <div className={\"row text-center\"}>\n                <div className={\"table-responsive\"}>\n                    {staffs &&\n                    <table className={\"table table-striped table-hover\"}>\n                        <thead>\n                        <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">Full Name</th>\n                            <th scope=\"col\">Email</th>\n                            <th scope=\"col\">Join Date</th>\n                            <th scope=\"col\">Last Login</th>\n                            <th scope=\"col\">Admin</th>\n                            <th scope=\"col\">Delete</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {staffs.map((staff, index) => (\n                            <tr key={staff.id}>\n                                <th scope=\"row\">{index + 1}</th>\n                                <td>{staff.full_name}</td>\n                                <td>{staff.email}</td>\n                                <td>{new Date(staff.date_joined).toLocaleDateString()}</td>\n                                <td>{new Date(staff.last_login).toLocaleDateString()}</td>\n                                <td>{staff.isAdmin ? <i className=\"fas fa-check\"></i> :\n                                    <i className=\"fas fa-times\"></i>}</td>\n                                <td>\n                                    {staff.isAdmin !== true && <button className={\"btn btn-danger\"} onClick={() => {\n                                        deleteStaff(staff.id)}}><i className=\"fas fa-times\"></i></button>}\n                                </td>\n                            </tr>\n                        ))}\n                        </tbody>\n                    </table>\n                    }\n                </div>\n            </div>\n        </div>\n    );\n}\n\n\nexport default ShowStaffsScreen;","import React from 'react';\nimport {Container, Row, Col} from \"react-bootstrap\";\n\n\nfunction FormContainer({children}) {\n    return (\n        <Container>\n            <Row className={\"justify-content-md-center mt-3\"}>\n                <Col xs={12} md={6}>\n                    {children}\n                </Col>\n            </Row>\n        </Container>\n    );\n}\n\n\nexport default FormContainer;","import React, {useState, useEffect} from 'react';\nimport FormContainer from \"../components/FormContainer\";\nimport Loader from \"../components/Loader\";\nimport {Form, Button, Row, Col} from \"react-bootstrap\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {login} from \"../actions/staffActions\";\n\nfunction StaffLoginScreen({location, history}) {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    const dispatch = useDispatch()\n\n    const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\n\n    const staffLogin = useSelector(state => state.staffLogin);\n    const {error, loading, staffInfo} = staffLogin;\n\n    useEffect(() => {\n        if (staffInfo) {\n            history.push(redirect);\n        }\n    }, [history, staffInfo, redirect])\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    }, [])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(login(email, password));\n    }\n\n    return (\n        <FormContainer>\n            <h1>Sign In</h1>\n            <hr/>\n            {error && <h5 className={\"text-danger\"}>{error}</h5>}\n            {loading && <Loader/>}\n\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId={\"email\"}>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control\n                        required={true}\n                        type={\"email\"}\n                        placeholder={\"Enter Email Address\"}\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId={\"password\"} className={\"mt-3\"}>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        required={true}\n                        type={\"password\"}\n                        placeholder={\"Enter Password\"}\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n                <Button type={\"submit\"} variant={\"primary\"} className={\"mt-3\"}>Sign In</Button>\n            </Form>\n\n        </FormContainer>\n    );\n}\n\n\nexport default StaffLoginScreen;","import React from 'react';\nimport {useHistory} from \"react-router-dom\";\n\n\nfunction HomepageScreen() {\n    let history = useHistory();\n\n    return (\n        <div className={\"container mt-5\"}>\n                <div className={\"row w-25 p-5 mx-auto text-center\"}>\n                    <button className={\"btn btn-primary\"} onClick={() => {\n                        history.push(\"/create-new-record/\")\n                    }}>Create New Record\n                    </button>\n                </div>\n                <div className={\"row w-25 p-5 mx-auto text-center\"}>\n                    <button className={\"btn btn-primary\"} onClick={() => {\n                        history.push(\"/search-record/\")\n                    }}>Search Record\n                    </button>\n                </div>\n        </div>\n    );\n}\n\n\nexport default HomepageScreen;","import React, {useEffect, useState} from 'react';\nimport FormContainer from \"../components/FormContainer\";\nimport Loader from \"../components/Loader\";\nimport {Form, Button, Row, Col} from \"react-bootstrap\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {createStaffAction} from \"../actions/staffActions\";\n\nfunction CreateStaffScreen() {\n    const [first_name, set_first_name] = useState(\"\");\n    const [last_name, set_last_name] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n    const [passwordMessage, setPasswordMessage] = useState(\"\");\n\n    const dispatch = useDispatch()\n\n    const staff = useSelector(state => state.createStaff);\n    const {error, loading, data} = staff;\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    }, [])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        if (password !== confirmPassword) {\n            setPasswordMessage(\"Passwords do not match.\")\n        } else {\n            dispatch(createStaffAction(first_name, last_name, email, password));\n        }\n    }\n\n    return (\n        <FormContainer>\n            <h1>Create Staff</h1>\n            <hr/>\n            {error && <h5 className={\"text-danger\"}>{error}</h5>}\n            {passwordMessage && <h5 className={\"text-danger\"}>{passwordMessage}</h5>}\n            {loading && <Loader/>}\n            {data && <h3 className={\"text-center\"}>{data.message}</h3>}\n\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId={\"first_name\"}>\n                    <Form.Label>First Name</Form.Label>\n                    <Form.Control\n                        required={true}\n                        type={\"name\"}\n                        placeholder={\"Enter First Name\"}\n                        value={first_name}\n                        onChange={(e) => set_first_name(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId={\"last_name\"} className={\"mt-3\"}>\n                    <Form.Label>Last Name</Form.Label>\n                    <Form.Control\n                        required={true}\n                        type={\"name\"}\n                        placeholder={\"Enter Last Name\"}\n                        value={last_name}\n                        onChange={(e) => set_last_name(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId={\"email\"} className={\"mt-3\"}>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control\n                        required={true}\n                        type={\"email\"}\n                        placeholder={\"Enter Email Address\"}\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId={\"password\"} className={\"mt-3\"}>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        required={true}\n                        type={\"password\"}\n                        placeholder={\"Enter Password\"}\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId={\"passwordConfirm\"} className={\"mt-3\"}>\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control\n                        required={true}\n                        type={\"password\"}\n                        placeholder={\"Enter Confirm Password\"}\n                        value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n                <Button type={\"submit\"} variant={\"primary\"} className={\"mt-3\"}>Submit</Button>\n            </Form>\n        </FormContainer>\n    );\n}\n\n\nexport default CreateStaffScreen;","import React, {useEffect, useState} from 'react';\nimport FormContainer from \"../components/FormContainer\";\nimport {Form, Button, Row, Col} from \"react-bootstrap\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getCustomersAction, createRecordAction} from \"../actions/clinicActions\";\n\n\nimport {Typeahead} from 'react-bootstrap-typeahead';\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\nimport Loader from \"../components/Loader\";\n\n\nfunction CreateRecordScreen() {\n    const [customer_firstName, setCustomer_fistName] = useState(\"\");\n    const [customer_lastName, setCustomer_lastName] = useState(\"\");\n    const [customer_email, setCustomer_email] = useState(\"\");\n    const [customer_contactInformation, setCustomer_contactInformation] = useState(\"\");\n    const [customer_phoneNumber, setCustomer_phoneNumber] = useState(\"\");\n\n    const [animal_name, setAnimal_name] = useState(\"\");\n    const [animal_species, setAnimal_species] = useState(\"\");\n    const [animal_genus, setAnimal_genus] = useState(\"\");\n    const [animal_age, setAnimal_age] = useState(\"\");\n    const [animal_comment, setAnimal_comment] = useState(\"\");\n\n    const [customerSelected, setCustomerSelected] = useState(\"\");\n\n    const dispatch = useDispatch()\n\n    const customers = useSelector(state => state.getCustomers);\n    const {error, loading, customersData} = customers;\n\n    const record = useSelector(state => state.createRecord);\n    const {recordLoading, recordMessage, recordError} = record;\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n        dispatch(getCustomersAction())\n    }, [])\n\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(createRecordAction(animal_name, animal_species, animal_genus, animal_age, animal_comment,\n            customer_firstName, customer_lastName, customer_email, customer_contactInformation, customer_phoneNumber))\n    }\n\n\n    const customersName = () => {\n        const customers = customersData;\n        const customersName_list = []\n        if (customers) {\n            for (let i = 0; i < customers.length; i++) {\n                const customer_fullName = customers[i].first_name + \" \" + customers[i].last_name\n                customersName_list.push(customer_fullName)\n            }\n        }\n        return customersName_list\n    }\n\n    const customerFormHandler = (customer) => {\n        let first_name,last_name;\n        try{\n            first_name = customer.split(\" \")[0];\n            last_name = customer.split(\" \")[1];\n        }catch(e){\n            return;\n        }\n        try{\n            if (customersData) {\n            const find_customer = customersData.find((element) => {\n                if (element.first_name === first_name && element.last_name === last_name) return true;\n            })\n            setCustomer_fistName(find_customer.first_name);\n            setCustomer_lastName(find_customer.last_name);\n            setCustomer_email(find_customer.email);\n            setCustomer_contactInformation(find_customer.contactInformation);\n            setCustomer_phoneNumber(find_customer.phoneNumber);\n        }\n        }catch(e){\n            return;\n        }\n\n    }\n\n    useEffect(() => {\n        customerFormHandler(customerSelected);\n    }, [customerSelected])\n\n    return (\n        <div className={\"container mt-5\"}>\n            {loading && <Loader/>}\n            {recordLoading && <Loader/>}\n            {error && <h5 className={\"text-danger\"}>{error}</h5>}\n            {recordError && <h5 className={\"text-danger\"}>{recordError}</h5>}\n            {recordMessage && <h3 className={\"text-info\"}>{recordMessage.message}</h3>}\n\n            <Form onSubmit={submitHandler}>\n                <div className={\"row\"}>\n                    <div className={\"col-6\"}>\n                        <h1>Create Animal Record</h1>\n                        <hr/>\n\n                        <Form.Group controlId={\"animal_name\"}>\n                            <Form.Label>Animal Name*</Form.Label>\n                            <Form.Control\n                                required={true}\n                                type={\"name\"}\n                                placeholder={\"Enter Animal Name\"}\n                                value={animal_name}\n                                onChange={(e) => setAnimal_name(e.target.value)}>\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId={\"animal_species\"} className={\"mt-2\"}>\n                            <Form.Label>Animal Species</Form.Label>\n                            <Form.Control\n                                required={false}\n                                type={\"name\"}\n                                placeholder={\"Enter Animal Species\"}\n                                value={animal_species}\n                                onChange={(e) => setAnimal_species(e.target.value)}>\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId={\"animal_genus\"} className={\"mt-2\"}>\n                            <Form.Label>Animal Genus</Form.Label>\n                            <Form.Control\n                                required={false}\n                                type={\"name\"}\n                                placeholder={\"Enter Animal Genus\"}\n                                value={animal_genus}\n                                onChange={(e) => setAnimal_genus(e.target.value)}>\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId={\"animal_age\"} className={\"mt-2\"}>\n                            <Form.Label>Animal Age</Form.Label>\n                            <Form.Control\n                                required={false}\n                                type={\"name\"}\n                                placeholder={\"Enter Animal Age\"}\n                                value={animal_age}\n                                onChange={(e) => setAnimal_age(e.target.value)}>\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId={\"animal_comment\"} className={\"mt-2\"}>\n                            <Form.Label>Animal Comment</Form.Label>\n                            <Form.Control\n                                required={false}\n                                type={\"name\"}\n                                placeholder={\"Enter Animal Comment\"}\n                                value={animal_comment}\n                                onChange={(e) => setAnimal_comment(e.target.value)}>\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId={\"customer\"} className={\"mt-2\"}>\n                            <Form.Label>Customer</Form.Label>\n                            <Typeahead\n                                required={false}\n                                type={\"name\"}\n                                onChange={(selected) => {\n                                    setCustomerSelected(selected[0]);\n                                }}\n                                options={customersName()}\n                            />\n                        </Form.Group>\n\n\n                    </div>\n                    <div className={\"col-6\"}>\n                        <h1>Customer</h1>\n                        <hr/>\n\n                        <Form.Group controlId={\"customer_firstName\"}>\n                            <Form.Label>First Name*</Form.Label>\n                            <Form.Control\n                                required={true}\n                                type={\"name\"}\n                                placeholder={\"Enter Custumer First Name\"}\n                                value={customer_firstName}\n                                onChange={(e) => setCustomer_fistName(e.target.value)}>\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId={\"customer_lastName\"} className={\"mt-2\"}>\n                            <Form.Label>Last Name*</Form.Label>\n                            <Form.Control\n                                required={true}\n                                type={\"name\"}\n                                placeholder={\"Customer Last Name\"}\n                                value={customer_lastName}\n                                onChange={(e) => setCustomer_lastName(e.target.value)}>\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId={\"customer_email\"} className={\"mt-2\"}>\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control\n                                required={false}\n                                type={\"name\"}\n                                placeholder={\"Enter Animal Genus\"}\n                                value={customer_email}\n                                onChange={(e) => setCustomer_email(e.target.value)}>\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId={\"customer_contactInformation\"} className={\"mt-2\"}>\n                            <Form.Label>Contact Information</Form.Label>\n                            <Form.Control\n                                required={false}\n                                type={\"name\"}\n                                placeholder={\"Enter Customer Contact Information\"}\n                                value={customer_contactInformation}\n                                onChange={(e) => setCustomer_contactInformation(e.target.value)}>\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId={\"customer_phoneNumber\"} className={\"mt-2\"}>\n                            <Form.Label>Phone Number*</Form.Label>\n                            <Form.Control\n                                required={true}\n                                type={\"name\"}\n                                placeholder={\"Enter Customer Phone Number\"}\n                                value={customer_phoneNumber}\n                                onChange={(e) => setCustomer_phoneNumber(e.target.value)}>\n                            </Form.Control>\n                        </Form.Group>\n                    </div>\n                    {/*{customerSelected && customerForm()}*/}\n\n                </div>\n                <div className={\"row\"}>\n                    <Button type={\"submit\"} variant={\"primary\"} className={\"w-25 mx-auto mt-2\"}>Submit</Button>\n                </div>\n\n            </Form>\n        </div>\n    )\n        ;\n}\n\n\nexport default CreateRecordScreen;","import {\n    GET_CUSTOMERS_REQUEST,\n    GET_CUSTOMERS_SUCCESS,\n    GET_CUSTOMERS_FAIL,\n    CREATE_RECORD_REQUEST,\n    CREATE_RECORD_SUCCESS,\n    CREATE_RECORD_FAIL,\n    SEARCH_RECORD_REQUEST,\n    SEARCH_RECORD_SUCCESS,\n    SEARCH_RECORD_FAIL,\n    GET_RECORD_REQUEST,\n    GET_RECORD_SUCCESS,\n    GET_RECORD_FAIL,\n    GET_CUSTOMER_REQUEST,\n    GET_CUSTOMER_SUCCESS,\n    GET_CUSTOMER_FAIL,\n    GET_ANIMAL_REQUEST,\n    GET_ANIMAL_SUCCESS,\n    GET_ANIMAL_FAIL,\n    EDIT_CUSTOMER_REQUEST,\n    EDIT_CUSTOMER_SUCCESS,\n    EDIT_CUSTOMER_FAIL,\n    EDIT_ANIMAL_REQUEST,\n    EDIT_ANIMAL_SUCCESS,\n    EDIT_ANIMAL_FAIL,\n    DELETE_CUSTOMER_REQUEST,\n    DELETE_CUSTOMER_SUCCESS,\n    DELETE_CUSTOMER_FAIL,\n    DELETE_ANIMAL_REQUEST,\n    DELETE_ANIMAL_SUCCESS,\n    DELETE_ANIMAL_FAIL,\n} from \"../constants/clinicConstants\";\nimport axios from \"axios\";\n\nexport const getCustomersAction = () => async (dispatch, getState) => {\n    try {\n\n        dispatch({\n            type: GET_CUSTOMERS_REQUEST,\n        })\n\n        const {\n            staffLogin: {staffInfo}\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-type\": \"application/json\",\n                Authorization: `Bearer ${staffInfo.token}`\n            }\n        }\n\n        const {data} = await axios.get(\n            \"/api/customers/\",\n            config\n        )\n\n        dispatch({\n            type: GET_CUSTOMERS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: GET_CUSTOMERS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message\n        })\n    }\n}\n\nexport const getCustomerAction = (pk) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: GET_CUSTOMER_REQUEST,\n        })\n\n        const {\n            staffLogin: {staffInfo}\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-type\": \"application/json\",\n                Authorization: `Bearer ${staffInfo.token}`\n            }\n        }\n\n        const {data} = await axios.get(\n            `/api/customers/${pk}/`,\n            config\n        )\n        dispatch({\n            type: GET_CUSTOMER_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: GET_CUSTOMER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message\n        })\n    }\n}\n\nexport const getAnimalAction = (pk) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: GET_ANIMAL_REQUEST,\n        })\n\n        const {\n            staffLogin: {staffInfo}\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-type\": \"application/json\",\n                Authorization: `Bearer ${staffInfo.token}`\n            }\n        }\n\n        const {data} = await axios.get(\n            `/api/animals/${pk}/`,\n            config\n        )\n        dispatch({\n            type: GET_ANIMAL_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: GET_ANIMAL_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message\n        })\n    }\n}\n\nexport const editCustomerAction = (pk, first_name, last_name, email,\n                                   contactInformation, phoneNumber) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: EDIT_CUSTOMER_REQUEST,\n        })\n\n        const {\n            staffLogin: {staffInfo}\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-type\": \"application/json\",\n                Authorization: `Bearer ${staffInfo.token}`\n            }\n        }\n\n        const {data} = await axios.put(\n            `/api/customers/change-attributes/${pk}/`,\n            {\n                \"first_name\": first_name,\n                \"last_name\": last_name, \"email\": email, \"contactInformation\": contactInformation,\n                \"phoneNumber\": phoneNumber\n            },\n            config\n        )\n        dispatch({\n            type: EDIT_CUSTOMER_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: EDIT_CUSTOMER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message\n        })\n    }\n}\n\nexport const editAnimalAction = (pk, animal_name, animal_species, animal_genus, animal_age,\n                                 animal_comment) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: EDIT_ANIMAL_REQUEST,\n        })\n\n        const {\n            staffLogin: {staffInfo}\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-type\": \"application/json\",\n                Authorization: `Bearer ${staffInfo.token}`\n            }\n        }\n\n        const {data} = await axios.put(\n            `/api/animals/change-attributes/${pk}/`,\n            {\n                \"name\": animal_name, \"species\": animal_species, \"genus\": animal_genus, \"age\": animal_age,\n                \"comment\": animal_comment\n            },\n            config\n        )\n        dispatch({\n            type: EDIT_ANIMAL_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: EDIT_ANIMAL_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message\n        })\n    }\n}\n\nexport const createRecordAction = (animal_name, animal_species, animal_genus, animal_age,\n                                   animal_comment, first_name, last_name, email,\n                                   contactInformation, phoneNumber) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: CREATE_RECORD_REQUEST,\n        })\n\n        const {\n            staffLogin: {staffInfo}\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-type\": \"application/json\",\n                Authorization: `Bearer ${staffInfo.token}`\n            }\n        }\n\n        const {data} = await axios.post(\n            \"/api/animals/create/\",\n            {\n                \"animal_name\": animal_name, \"animal_species\": animal_species, \"animal_genus\": animal_genus,\n                \"animal_age\": animal_age, \"animal_comment\": animal_comment, \"first_name\": first_name,\n                \"last_name\": last_name, \"email\": email, \"contactInformation\": contactInformation,\n                \"phoneNumber\": phoneNumber\n            },\n            config\n        )\n        dispatch({\n            type: CREATE_RECORD_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: CREATE_RECORD_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message\n        })\n    }\n}\n\nexport const getRecordsAction = () => async (dispatch, getState) => {\n    try {\n\n        dispatch({\n            type: SEARCH_RECORD_REQUEST,\n        })\n\n        const {\n            staffLogin: {staffInfo}\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-type\": \"application/json\",\n                Authorization: `Bearer ${staffInfo.token}`\n            }\n        }\n\n        const {data} = await axios.get(\n            \"/api/animals/\",\n            config\n        )\n\n        dispatch({\n            type: SEARCH_RECORD_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: SEARCH_RECORD_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message\n        })\n    }\n}\n\nexport const getRecordAction = (name) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: GET_RECORD_REQUEST,\n        })\n\n        const {\n            staffLogin: {staffInfo}\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-type\": \"application/json\",\n                Authorization: `Bearer ${staffInfo.token}`\n            }\n        }\n\n        const {data} = await axios.get(\n            `/api/animals/search/${name}`,\n            config\n        )\n        dispatch({\n            type: GET_RECORD_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: GET_RECORD_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message\n        })\n    }\n}\n\nexport const deleteCustomerAction = (pk) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: DELETE_CUSTOMER_REQUEST,\n        })\n\n        const {\n            staffLogin: {staffInfo}\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-type\": \"application/json\",\n                Authorization: `Bearer ${staffInfo.token}`\n            }\n        }\n\n        const {data} = await axios.delete(\n            `/api/customers/delete/${pk}/`,\n            config\n        )\n        dispatch({\n            type: DELETE_CUSTOMER_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: DELETE_CUSTOMER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message\n        })\n    }\n}\n\nexport const deleteAnimalAction = (pk) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: DELETE_ANIMAL_REQUEST,\n        })\n\n        const {\n            staffLogin: {staffInfo}\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-type\": \"application/json\",\n                Authorization: `Bearer ${staffInfo.token}`\n            }\n        }\n\n        const {data} = await axios.delete(\n            `/api/animals/delete/${pk}/`,\n            config\n        )\n        dispatch({\n            type: DELETE_ANIMAL_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: DELETE_ANIMAL_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message\n        })\n    }\n}","import React, {useState} from 'react';\nimport {LinkContainer} from \"react-router-bootstrap\";\nimport {deleteCustomerAction, deleteAnimalAction} from \"../actions/clinicActions\";\nimport {useDispatch, useSelector} from \"react-redux\";\n\n\nimport \"../components_css/RecordTable.css\"\nimport {Link} from \"react-router-dom\";\n\n\nfunction RecordTable({data, customer}) {\n    const [message, setMessage] = useState(\"\");\n\n    const staff = useSelector(state => state.staffLogin);\n    const {staffInfo} = staff;\n\n\n    const dispatch = useDispatch()\n\n    const deleteCustomer = (pk) => {\n        if (!staffInfo.isAdmin) {\n            setMessage(\"Only admin can delete a record.\")\n            return\n        }\n        dispatch(deleteCustomerAction(pk));\n        window.location.reload();\n    }\n\n    const deleteAnimal = (pk) => {\n        if (!staffInfo.isAdmin) {\n            setMessage(\"Only admin can delete a record.\")\n            return\n        }\n        dispatch(deleteAnimalAction(pk));\n        window.location.reload();\n    }\n    try {\n        return (\n            <div className={\"table-responsive text-center mt-3\"}>\n                {message && <h2 className={\"text-danger\"}>{message}</h2>}\n                <table className={\"table table-secondary\"}>\n                    <thead>\n                    <tr>\n                        <th scope=\"col\">First Name</th>\n                        <th scope=\"col\">Last Name</th>\n                        <th scope=\"col\">Email</th>\n                        <th scope=\"col\">Contact Information</th>\n                        <th scope=\"col\">Phone Number</th>\n                        <th scope=\"col\">Delete</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n\n                    <tr>\n                        <td><Link to={`/customer/${customer.id}/`}>{customer.first_name}</Link></td>\n                        <td>{customer.last_name}</td>\n                        <td>{customer.email}</td>\n                        <td>{customer.contactInformation}</td>\n                        <td>{customer.phoneNumber}</td>\n                        <td>{<button className={\"btn btn-danger\"} onClick={() => {\n                            deleteCustomer(customer.id)\n                        }}><i className=\"fas fa-times\"></i></button>}</td>\n                    </tr>\n\n                    <tr>\n                        <td colSpan=\"6\">\n                            <div className={\"table-responsive mx-5\"}>\n                                <table className={\"table table-hover\"}>\n                                    <thead>\n                                    <tr>\n                                        <th scope=\"col\">#</th>\n                                        <th scope=\"col\">Animal Name</th>\n                                        <th scope=\"col\">Animal Species</th>\n                                        <th scope=\"col\">Animal Genus</th>\n                                        <th scope=\"col\">Animal Age</th>\n                                        <th scope=\"col\">Animal Comment</th>\n                                        <th scope=\"col\">Delete</th>\n                                    </tr>\n                                    </thead>\n                                    <tbody>\n                                    {data.map((element, index) => (\n\n                                        <tr key={element.id}>\n                                            <th scope=\"row\">{index + 1}</th>\n                                            <td><Link to={`/animal/${element.id}/`}>{element.name}</Link></td>\n                                            <td>{element.species}</td>\n                                            <td>{element.genus}</td>\n                                            <td>{element.age}</td>\n                                            <td>{element.comment}</td>\n                                            <td>{<button className={\"btn btn-danger\"} onClick={() => {\n                                                deleteAnimal(element.id)\n                                            }}><i className=\"fas fa-times\"></i></button>}</td>\n                                        </tr>\n                                    ))}\n                                    </tbody>\n                                </table>\n                            </div>\n                        </td>\n                    </tr>\n                    </tbody>\n                </table>\n            </div>\n        );\n    } catch (e) {\n        return(window.location.reload());\n    }\n\n}\n\n\nexport default RecordTable;","import React, {useEffect, useState} from 'react';\nimport {Typeahead} from 'react-bootstrap-typeahead';\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\nimport Loader from \"../components/Loader\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getRecordsAction, getRecordAction} from \"../actions/clinicActions\";\nimport {Form} from \"react-bootstrap\";\nimport RecordTable from \"../components/RecordTable\";\nimport {SEARCH_RECORD_RESET} from \"../constants/clinicConstants\";\n\n\nfunction SearchRecordScreen() {\n    const [animalsAndCustomers, setAnimalsAndCustomers] = useState([]);\n    const [typeOfRecord, setTypeOfRecord] = useState(\"\");\n\n    const records = useSelector(state => state.getRecords);\n    const {loading, recordsData, error} = records;\n\n    const record = useSelector(state => state.getRecord);\n    const {recordLoading, recordData, recordError} = record;\n\n\n    const searchBarList = () => {\n        const allRecors = recordsData;\n        if (allRecors) {\n            let searchList = [];\n            for (let i = 0; i < allRecors.length; i++) {\n                const animal_name = \"Animal -> \" + allRecors[i].name;\n                const customer_name = \"Customer -> \" + allRecors[i].customer.first_name + \" \" + allRecors[i].customer.last_name\n                searchList.push(animal_name);\n                searchList.push(customer_name);\n            }\n            searchList = searchList.filter((item, index) => searchList.indexOf(item) === index);\n            setAnimalsAndCustomers(searchList);\n        }\n    }\n\n    const selectedRecordHandler = (selectedRecord) => {\n        const splitedRecord = selectedRecord.split(\" -> \");\n        setTypeOfRecord(splitedRecord[0]);\n        dispatch(getRecordAction(splitedRecord[1]));\n    }\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n        dispatch({type: SEARCH_RECORD_RESET})\n        dispatch(getRecordsAction());\n    }, [])\n\n    useEffect(() => {\n        searchBarList();\n    }, [recordsData])\n\n    const formHandler = () => {\n        let data;\n\n        if (typeOfRecord === \"Customer\") {\n            data = recordData[0];\n        } else {\n            data = recordData;\n        }\n        const customer = data[0].customer;\n        try {\n            return (\n                <RecordTable data={data} customer={customer}/>\n            );\n        }catch(e){\n            return;\n        }\n    }\n\n    return (\n        <div className={\"container mt-5\"}>\n            {loading && <Loader/>}\n            {recordLoading && <Loader/>}\n            {error && <h5 className={\"text-danger\"}>{error}</h5>}\n            {recordError && <h5 className={\"text-danger\"}>{recordError}</h5>}\n            <h1>Search Animal or Customer Record</h1>\n            <hr/>\n            <div className={\"row\"}>\n                <Form.Group controlId={\"customer\"} className={\"mt-2\"}>\n                    <Form.Label>Search for Animal or Customer Name:</Form.Label>\n                    <Typeahead\n                        onChange={(selected) => {\n                            if (selected[0] !== undefined) {\n                                selectedRecordHandler(selected[0]);\n                            }\n                        }}\n                        options={animalsAndCustomers}\n                    />\n                </Form.Group>\n            </div>\n            <div className={\"row\"}>\n                {recordData && formHandler()}\n            </div>\n        </div>\n    );\n}\n\n\nexport default SearchRecordScreen;","import React, {useEffect, useState} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport Loader from \"../components/Loader\";\nimport {Button, Form} from \"react-bootstrap\";\nimport {getCustomerAction, editCustomerAction} from \"../actions/clinicActions\";\nimport FormContainer from \"../components/FormContainer\";\n\n\nfunction CustomerDetailScreen() {\n    const [customer_firstName, setCustomer_fistName] = useState(\"\");\n    const [customer_lastName, setCustomer_lastName] = useState(\"\");\n    const [customer_email, setCustomer_email] = useState(\"\");\n    const [customer_contactInformation, setCustomer_contactInformation] = useState(\"\");\n    const [customer_phoneNumber, setCustomer_phoneNumber] = useState(\"\");\n\n    const dispatch = useDispatch()\n\n    const customer = useSelector(state => state.getCustomer);\n    const {error, loading, customerData} = customer;\n\n    const edit = useSelector(state => state.editCustomer);\n    const {editLoading, editMessage} = edit;\n\n    const pk = window.location.pathname.split(\"/\")[2];\n    useEffect(() => {\n        window.scrollTo(0, 0);\n        dispatch(getCustomerAction(pk));\n    }, [])\n\n    useEffect(() => {\n        if (customerData) {\n            setCustomer_fistName(customerData.first_name);\n            setCustomer_lastName(customerData.last_name);\n            setCustomer_email(customerData.email);\n            setCustomer_contactInformation(customerData.contactInformation);\n            setCustomer_phoneNumber(customerData.phoneNumber);\n        }\n    }, [customerData])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(editCustomerAction(pk, customer_firstName, customer_lastName,\n            customer_email, customer_contactInformation, customer_phoneNumber))\n    }\n\n    return (\n        <FormContainer>\n            {loading && <Loader/>}\n            {editLoading && <Loader/>}\n            {error && <h5 className={\"text-danger\"}>{error}</h5>}\n            <h1>Customer Details</h1>\n            <hr/>\n            {editMessage && <h3 className={\"text-info\"}>{editMessage.message}</h3>}\n            <Form onSubmit={submitHandler}>\n                <div className={\"row\"}>\n                    <Form.Group controlId={\"customer_firstName\"}>\n                        <Form.Label>First Name*</Form.Label>\n                        <Form.Control\n                            required={true}\n                            type={\"name\"}\n                            placeholder={\"Enter Custumer First Name\"}\n                            value={customer_firstName}\n                            onChange={(e) => setCustomer_fistName(e.target.value)}>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId={\"customer_lastName\"} className={\"mt-2\"}>\n                        <Form.Label>Last Name*</Form.Label>\n                        <Form.Control\n                            required={true}\n                            type={\"name\"}\n                            placeholder={\"Customer Last Name\"}\n                            value={customer_lastName}\n                            onChange={(e) => setCustomer_lastName(e.target.value)}>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId={\"customer_email\"} className={\"mt-2\"}>\n                        <Form.Label>Email</Form.Label>\n                        <Form.Control\n                            required={false}\n                            type={\"name\"}\n                            placeholder={\"Enter Animal Genus\"}\n                            value={customer_email}\n                            onChange={(e) => setCustomer_email(e.target.value)}>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId={\"customer_contactInformation\"} className={\"mt-2\"}>\n                        <Form.Label>Contact Information</Form.Label>\n                        <Form.Control\n                            required={false}\n                            type={\"name\"}\n                            placeholder={\"Enter Customer Contact Information\"}\n                            value={customer_contactInformation}\n                            onChange={(e) => setCustomer_contactInformation(e.target.value)}>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId={\"customer_phoneNumber\"} className={\"mt-2\"}>\n                        <Form.Label>Phone Number*</Form.Label>\n                        <Form.Control\n                            required={true}\n                            type={\"name\"}\n                            placeholder={\"Enter Customer Phone Number\"}\n                            value={customer_phoneNumber}\n                            onChange={(e) => setCustomer_phoneNumber(e.target.value)}>\n                        </Form.Control>\n                    </Form.Group>\n                </div>\n                <div className={\"row\"}>\n                    <Button type={\"submit\"} variant={\"primary\"} className={\"w-25 mx-auto mt-2\"}>Submit</Button>\n                </div>\n            </Form>\n        </FormContainer>\n    );\n}\n\n\nexport default CustomerDetailScreen;","import React, {useEffect, useState} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport Loader from \"../components/Loader\";\nimport {Button, Form} from \"react-bootstrap\";\nimport {getAnimalAction, editAnimalAction} from \"../actions/clinicActions\";\nimport FormContainer from \"../components/FormContainer\";\n\nfunction AnimalDetailScreen() {\n    const [animal_name, setAnimal_name] = useState(\"\");\n    const [animal_species, setAnimal_species] = useState(\"\");\n    const [animal_genus, setAnimal_genus] = useState(\"\");\n    const [animal_age, setAnimal_age] = useState(\"\");\n    const [animal_comment, setAnimal_comment] = useState(\"\");\n\n    const dispatch = useDispatch()\n\n    const animal = useSelector(state => state.getAnimal);\n    const {error, loading, animalData} = animal;\n\n    const edit = useSelector(state => state.editAnimal);\n    const {editLoading, editMessage} = edit;\n\n    const pk = window.location.pathname.split(\"/\")[2];\n    useEffect(() => {\n        window.scrollTo(0, 0);\n        dispatch(getAnimalAction(pk));\n    }, [])\n\n    useEffect(() => {\n        if (animalData) {\n            setAnimal_name(animalData.name);\n            setAnimal_species(animalData.species);\n            setAnimal_genus(animalData.genus);\n            setAnimal_age(animalData.age);\n            setAnimal_comment(animalData.comment);\n        }\n    }, [animalData])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(editAnimalAction(pk, animal_name, animal_species, animal_genus, animal_age, animal_comment))\n    }\n    return (\n        <FormContainer>\n            {loading && <Loader/>}\n            {editLoading && <Loader/>}\n            {error && <h5 className={\"text-danger\"}>{error}</h5>}\n            <h1>Animal Details</h1>\n            <hr/>\n            {editMessage && <h3 className={\"text-info\"}>{editMessage.message}</h3>}\n            <Form onSubmit={submitHandler}>\n                <div className={\"row\"}>\n                    <Form.Group controlId={\"animal_name\"}>\n                        <Form.Label>Animal Name*</Form.Label>\n                        <Form.Control\n                            required={true}\n                            type={\"name\"}\n                            placeholder={\"Enter Animal Name\"}\n                            value={animal_name}\n                            onChange={(e) => setAnimal_name(e.target.value)}>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId={\"animal_species\"} className={\"mt-2\"}>\n                        <Form.Label>Animal Species</Form.Label>\n                        <Form.Control\n                            required={false}\n                            type={\"name\"}\n                            placeholder={\"Enter Animal Species\"}\n                            value={animal_species}\n                            onChange={(e) => setAnimal_species(e.target.value)}>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId={\"animal_genus\"} className={\"mt-2\"}>\n                        <Form.Label>Animal Genus</Form.Label>\n                        <Form.Control\n                            required={false}\n                            type={\"name\"}\n                            placeholder={\"Enter Animal Genus\"}\n                            value={animal_genus}\n                            onChange={(e) => setAnimal_genus(e.target.value)}>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId={\"animal_age\"} className={\"mt-2\"}>\n                        <Form.Label>Animal Age</Form.Label>\n                        <Form.Control\n                            required={false}\n                            type={\"name\"}\n                            placeholder={\"Enter Animal Age\"}\n                            value={animal_age}\n                            onChange={(e) => setAnimal_age(e.target.value)}>\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId={\"animal_comment\"} className={\"mt-2\"}>\n                        <Form.Label>Animal Comment</Form.Label>\n                        <Form.Control\n                            required={false}\n                            type={\"name\"}\n                            placeholder={\"Enter Animal Comment\"}\n                            value={animal_comment}\n                            onChange={(e) => setAnimal_comment(e.target.value)}>\n                        </Form.Control>\n                    </Form.Group>\n                </div>\n                <div className={\"row\"}>\n                    <Button type={\"submit\"} variant={\"primary\"} className={\"w-25 mx-auto mt-2\"}>Submit</Button>\n                </div>\n            </Form>\n        </FormContainer>\n    );\n}\n\n\nexport default AnimalDetailScreen;","import React from 'react';\nimport {Container, Navbar, Nav, NavDropdown, Dropdown} from \"react-bootstrap\";\nimport {LinkContainer} from \"react-router-bootstrap\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {useHistory} from \"react-router-dom\";\n\nimport {logout} from \"../actions/staffActions\";\n\n\nimport \"../components_css/Header.css\"\n\nfunction Header() {\n    const staffLogin = useSelector(state => state.staffLogin);\n    const {staffInfo} = staffLogin;\n\n    const dispatch = useDispatch();\n    let history = useHistory();\n\n    const logoutHandler = () => {\n        dispatch(logout());\n        history.push(\"/\");\n    }\n\n    return (\n        <header className={\"sticky-top\"}>\n            <Navbar bg=\"primary\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\n                <Container>\n                    <LinkContainer to=\"/\">\n                        <Navbar.Brand>Animal Clinic</Navbar.Brand>\n                    </LinkContainer>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className=\"ms-auto\">\n                            {staffInfo ? (\n                                staffInfo.isAdmin ? (<React.Fragment>\n                                        <LinkContainer to=\"/create-staff/\">\n                                            <Nav.Link bsPrefix={\"btn btn-light header-button mx-1\"}>Create Staff</Nav.Link>\n                                        </LinkContainer>\n                                        <LinkContainer to=\"/show-staffs/\">\n                                            <Nav.Link bsPrefix={\"btn btn-info header-button mx-1\"}>Show Staffs</Nav.Link>\n                                        </LinkContainer>\n                                        <NavDropdown title={`${staffInfo.full_name} / Admin`} id=\"username\">\n                                            <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\n                                        </NavDropdown>\n                                    </React.Fragment>\n                                ) : (\n                                    <NavDropdown title={`${staffInfo.full_name} / Staff`} id=\"username\">\n                                        <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\n                                    </NavDropdown>\n                                )\n                            ) : (\n                                <LinkContainer to=\"/login/\">\n                                    <Nav.Link bsPrefix={\"btn btn-light header-button\"}>Login</Nav.Link>\n                                </LinkContainer>\n                            )}\n                        </Nav>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n        </header>\n    );\n}\n\n\nexport default Header;","import React, {useEffect} from 'react';\nimport {useDispatch} from \"react-redux\";\nimport jwt from \"jsonwebtoken\";\nimport {logout} from \"./actions/staffActions\";\n\nimport './App.css';\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\n\nimport ShowStaffsScreen from \"./screens/ShowStaffsScreen\";\nimport StaffLoginScreen from \"./screens/StaffLoginScreen\";\nimport HomepageScreen from \"./screens/HomepageScreen\";\nimport CreateStaffScreen from \"./screens/CreateStaffScreen\";\nimport CreateRecordScreen from \"./screens/CreateRecordScreen\";\nimport SearchRecordScreen from \"./screens/SearchRecordScreen\";\nimport CustomerDetailScreen from \"./screens/CustomerDetailScreen\";\nimport AnimalDetailScreen from \"./screens/AnimalDetailScreen\";\n\nimport Header from \"./components/Header\";\n\n\nfunction App() {\n    const dispatch = useDispatch();\n    useEffect(() => {\n        if (localStorage.getItem('staffInfo')) {\n            const token = JSON.parse(localStorage.getItem('staffInfo')).token\n            const decodedToken = jwt.decode(token, {complete: false});\n            const dateNow = new Date();\n            if (decodedToken.exp < dateNow.getTime() / 1000) {\n                dispatch(logout());\n            }\n        }\n    }, [dispatch])\n\n    return (\n        <Router>\n            <Header/>\n            <main>\n                <Switch>\n                    <Route path=\"/\" component={HomepageScreen} exact/>\n                    <Route path=\"/show-staffs/\" component={ShowStaffsScreen}/>\n                    <Route path=\"/login/\" component={StaffLoginScreen}/>\n                    <Route path=\"/create-staff/\" component={CreateStaffScreen}/>\n                    <Route path=\"/create-new-record/\" component={CreateRecordScreen}/>\n                    <Route path=\"/search-record/\" component={SearchRecordScreen}/>\n                    <Route path=\"/customer/:id/\" component={CustomerDetailScreen}/>\n                    <Route path=\"/animal/:id/\" component={AnimalDetailScreen}/>\n                </Switch>\n            </main>\n        </Router>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from \"react-redux\";\nimport store from \"./store\";\n\nimport './index.css';\nimport \"./bootstrap.min.css\"\nimport App from './App';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}